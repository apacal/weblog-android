apply plugin: 'com.android.model.application'

model {
    android {
        compileSdkVersion = 23
        buildToolsVersion = "23.0.0"

        defaultConfig.with {
            applicationId = "cn.apacal.weblog"
            minSdkVersion.apiLevel = 16
            targetSdkVersion.apiLevel = 16
        }

    }
    android.buildTypes {
        debug {
            debuggable = true
        }
    }

    repositories {
        libs(PrebuiltLibraries) {
            event {
                headers.srcDir "src/main/jni/AirKissLib_3/event2"
                binaries.withType(StaticLibraryBinary) {
                    staticLibraryFile = file("src/main/jni/AirKissLib_3/lib/android/libevent_core.a")
                }
            }
            owl {
                headers.srcDir "src/main/jni/AirKissLib_3/owl"
                binaries.withType(StaticLibraryBinary) {
                    staticLibraryFile = file("src/main/jni/AirKissLib_3/lib/android/libowl.a")
                }
            }
        }
    }


    /*
     * native build settings
     */
    android.ndk {
        moduleName = "airkiss3"
        stl     = "stlport_shared"
        cppFlags.add("-fexceptions")
        cppFlags.add("-fmessage-length=0")
        cppFlags.add("-Wno-unused-local-typedefs")
        cppFlags.add("-fvisibility=hidden")
        ldLibs.addAll(["android", "log"])
        cppFlags.add("-I${file("src/main/jni/AirKissLib_3")}".toString())
        cppFlags.add("-I${file("src/main/jni/AirKissLib_3/owl")}".toString())
//        CFlags.add("-I${file("src/main/jni/lwsdk_cpp/matrixssl")}".toString())


        platformVersion = 22
        CFlags.add("-DANDROID")
        cppFlags.add("-DANDROID")
//        CFlags.add("-O2")
//        cppFlags.add("-frtti")
        /*
         * Other ndk flags configurable here are
         * cppFlags.add("-fno-rtti")
         * cppFlags.add("-fno-exceptions")
         * ldLibs.addAll(["android", "log"])
         * stl       = "system"
         */
    }


//    task ndkBuild(type: Exec) {
//        commandLine "$ndkdir/ndk-build", "APP_PLATFORM=android-15"
//    }


    android.sources {
        main {
            jni {
                dependencies {
                    library "owl" linkage "static"
                    library "event" linkage "static"
                }
            }
        }
    }


    android.buildTypes {
        release {
            minifyEnabled = false
            proguardFiles.add(file('proguard-rules.txt'))
        }
    }

    android.productFlavors {
        // for detailed abiFilter descriptions, refer to "Supported ABIs" @
        // https://developer.android.com/ndk/guides/abis.html#sa
        create("arm") {
            ndk.abiFilters.add("armeabi")
        }
        create("arm7") {
            ndk.abiFilters.add("armeabi-v7a")
        }
//        create("arm8") {
//            ndk.abiFilters.add("arm64-v8a")
//        }
        create("x86") {
            ndk.abiFilters.add("x86")
        }
        create("x86-64") {
            ndk.abiFilters.add("x86_64")
        }
        create("mips") {
            ndk.abiFilters.add("mips")
        }
        create("mips-64") {
            ndk.abiFilters.add("mips64")
        }
        // To include all cpu architectures, leaves abiFilters empty
//        create("all")
    }
}

dependencies {
    // 选择图片插件
    compile 'me.iwf.photopicker:PhotoPicker:0.2.9@aar'

    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.github.bumptech.glide:glide:3.6.0'
}
